#BlueJ class context
comment0.target=TheGrid
comment0.text=\r\n\ Write\ a\ description\ of\ class\ TheGrid\ here.\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=newGrid
comment1.target=void\ setGrid(Tile[][])
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ TheGrid\r\n
comment10.params=x\ y
comment10.target=boolean\ checkOccupiedTile(int,\ int)
comment11.params=x\ y
comment11.target=Coordinate\ checkSurroundingTiles(int,\ int)
comment2.params=
comment2.target=void\ populateAirGrid()
comment3.params=grid
comment3.target=void\ findLowestCoordinates(Tile[][])
comment4.params=start\ end
comment4.target=java.util.ArrayList\ aStarfindPath(Coordinate,\ Coordinate)
comment4.text=\r\n\ This\ is\ the\ pathfinding\ system\ using\ the\ algorithm\ A*\ <br>\r\n\ Translated\ from\ pseudocode\ on\ the\ website\ https\://medium.com/@nicholas.w.swift/easy-a-star-pathfinding-7e6689c7f7b2\ <br>\r\n\ Made\ more\ efficient\ from\ my\ poor\ attempt\ to\ translate\ it\ using\ Chat\ GPT.\ This\ will\ be\ the\ only\ time\ I\ (Andy)\ will\ ever\ use\ ChatGPT\r\n
comment5.params=nodeList
comment5.target=TheGrid.Node\ getLowestCostNode(java.util.ArrayList)
comment6.params=nodeList\ targetNode
comment6.target=int\ getExistingNodeFCost(java.util.ArrayList,\ TheGrid.Node)
comment7.params=x\ y\ targetX\ targetY
comment7.target=int\ getHValue(int,\ int,\ int,\ int)
comment8.params=endNode
comment8.target=java.util.ArrayList\ createCoordinatePath(TheGrid.Node)
comment9.params=x\ y
comment9.target=boolean\ isInBounds(int,\ int)
numComments=12
